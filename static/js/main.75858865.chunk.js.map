{"version":3,"sources":["components/NewsCard.js","components/SearchBar.js","components/ResultCount.js","App.js","index.js"],"names":["NewsCard","newsId","headline","authorName","url","fileName","image","date","locNews","setRender","firstRender","useState","like","setLike","likedNews","setLikedNews","localyStoredNews","JSON","parse","window","localStorage","getItem","storedNews","useEffect","indexOf","removeDislikedNewsFromLocalStorage","addLikedNewsToLocalStorage","likedArr","setItem","stringify","length","disklikedArr","filter","disklikeNews","key","className","src","alt","href","target","rel","publishedDate","d","Date","getDate","getMonth","getFullYear","onClick","SearchBar","onSearch","type","placeholder","label","onChange","ResultCount","resultLength","totalNews","Newsapp","news","setNews","search","setSearch","reload","setReload","getLikedNews","axios","get","then","response","data","items","catch","error","console","log","searchedNews","newsItem","story","toLowerCase","e","value","map","index","id","localNews","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRA4FeA,EAzFE,SAAC,GAWX,IAVLC,EAUI,EAVJA,OACAC,EASI,EATJA,SACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,IACAC,EAMI,EANJA,SACAC,EAKI,EALJA,MACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,UACAC,EACI,EADJA,YACI,EACoBC,mBAAS,IAD7B,mBACGC,EADH,KACSC,EADT,OAE8BF,qBAF9B,mBAEGG,EAFH,KAEcC,EAFd,KAGEC,EAAmBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,eAC1DC,EAAkC,OAArBN,EAA4B,GAAKA,EAEpDO,qBAAU,WACHb,IACCE,IAIiB,IADDU,EAAWE,QAAQvB,GAFrCwB,IAMEC,OAIL,CAACd,IAEJ,IAAMc,EAA6B,WACjC,IAAMC,EAA0B,OAAfL,EAAsB,CAACrB,GAAvB,sBAAqCqB,GAArC,CAAiDrB,IAClEkB,OAAOC,aAAaQ,QAAQ,aAAcX,KAAKY,UAAUF,IACzDZ,EAAaO,EAAWQ,OAAS,IAG7BL,EAAqC,WACzC,IAAMM,EAAeT,EAAWU,QAAO,SAAAC,GACrC,GAAIA,IAAiBhC,EACnB,OAAOgC,KAGXd,OAAOC,aAAaQ,QAAQ,aAAcX,KAAKY,UAAUE,IACzDhB,EAAaO,EAAWQ,OAAS,IAsBnC,OACE,yBAAKI,IAAKjC,EAAQkC,UAAU,gBAC1B,yBAAKA,UAAU,YACb,yBAAKC,IAAK,gCAAkC9B,EAAO+B,IAAKhC,EAAU8B,UAAU,WAE9E,yBAAKA,UAAU,oBACb,uBAAGG,KAAMlC,EAAKmC,OAAO,SAASC,IAAI,uBAChC,yBAAKL,UAAU,cAAcjC,IAE/B,yBAAKiC,UAAU,aACb,mCAAShC,GACT,6BAhBQ,SAAAsC,GACd,IAAIC,EAAI,IAAIC,KAAKF,GACjB,OAAOC,EAAEE,UAAY,IAAMF,EAAEG,WAAa,IAAMH,EAAEI,cActCF,CAAQrC,KAEhB,4BACE4B,UAAS,eAAU3B,EAAWI,EAAO,GAAK,QAAYE,GAAa,IAAMN,EAAW,GAAK,QAAhF,KACTuC,QAlCO,WACTrC,GACFD,GAAU,GAGRG,GACFC,GAAQ,GACRL,GAAU,IAEVK,GAAQ,GACRL,GAAU,SC5CDwC,EAdG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACE,yBAAKd,UAAU,aACb,6CACA,2BACEe,KAAK,OACLC,YAAY,cACZC,MAAM,cACNC,SAAUJ,MCEHK,EAVK,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,UAChC,OACI,yBAAKrB,UAAU,iBACdoB,EAAe,EAAf,kBACcA,EADd,eACiCC,EADjC,YAEG,qBC+DGC,EA7DC,WAAO,IAAD,EACI9C,mBAAS,IADb,mBACb+C,EADa,KACPC,EADO,OAEQhD,mBAAS,IAFjB,mBAEbiD,EAFa,KAELC,EAFK,OAGQlD,oBAAS,GAHjB,mBAGbmD,EAHa,KAGLC,EAHK,KAId/C,EAAmBG,OAAOC,aAAaC,QAAQ,cAC/C2C,EAAoC,OAArBhD,EAA4B,GAAKA,EAEtDO,qBAAU,WACR0C,IACGC,IAXL,0EAYKC,MAAK,SAAAC,GAAQ,OAAIT,EAAQS,EAASC,KAAKC,UACvCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,IAEH,IAIMG,EAAejB,EAAK1B,QAAO,SAAA4C,GAC/B,OAAkE,IAA3DA,EAASC,MAAM3E,SAAS4E,cAActD,QAAQoC,MAGvD,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,CAAWc,SAVE,SAAA8B,GACflB,EAAUkB,EAAExC,OAAOyC,MAAMF,kBAUvB,kBAAC,EAAD,CAAavB,aAAcoB,EAAa7C,OAAQ0B,UAAWE,EAAK5B,SAChE,8BACG6C,EAAaM,KAAI,SAACL,EAAUM,GAAW,IAAD,EASjCN,EAASC,MAPXM,EAFmC,EAEnCA,GACAjF,EAHmC,EAGnCA,SACeC,EAJoB,EAInC,eACqBG,EALc,EAKnC,qBACsCD,EANH,EAMnC,uBAAyB,aACTE,EAPmB,EAOnC,gBACAH,EARmC,EAQnCA,IAGIgF,EAAYpB,EAAaxC,QAAQ2D,GAEvC,OACE,kBAAC,EAAD,CACEjD,IAAKgD,EACLjF,OAAQkF,EACRjF,SAAUA,EACVC,WAAYA,EACZC,IAAKA,EACLC,SAAUA,EACVC,MAAOA,EACPC,KAAMA,EACNC,SAAwB,IAAf4E,EACT1E,YAAaoD,EACbrD,UAAWsD,UCzDzBsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.75858865.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\n\nconst NewsCard = ({\n  newsId,\n  headline,\n  authorName,\n  url,\n  fileName,\n  image,\n  date,\n  locNews,\n  setRender,\n  firstRender\n}) => {\n  const [like, setLike] = useState([]);\n  const [likedNews, setLikedNews] = useState();\n  const localyStoredNews = JSON.parse(window.localStorage.getItem(\"liked-news\"));\n  const storedNews = localyStoredNews === null ? [] : localyStoredNews;\n\n  useEffect(() => {\n    if (!firstRender) {\n      if (like) {\n        removeDislikedNewsFromLocalStorage();\n      } else {\n        const newsIndex = storedNews.indexOf(newsId);\n        if (newsIndex !== -1) {\n          removeDislikedNewsFromLocalStorage();\n        } else {\n          addLikedNewsToLocalStorage()\n        }\n      }\n    }\n  }, [like]);\n\n  const addLikedNewsToLocalStorage = () => {\n    const likedArr = storedNews === null ? [newsId] : [...storedNews, newsId];\n    window.localStorage.setItem(\"liked-news\", JSON.stringify(likedArr));\n    setLikedNews(storedNews.length + 1);\n  }\n\n  const removeDislikedNewsFromLocalStorage = () => {\n    const disklikedArr = storedNews.filter(disklikeNews => {\n      if (disklikeNews !== newsId) {\n        return disklikeNews;\n      }\n    });\n    window.localStorage.setItem(\"liked-news\", JSON.stringify(disklikedArr));\n    setLikedNews(storedNews.length - 1);\n  };\n\n  const onLike = () => {\n    if (firstRender) {\n      setRender(false);\n    }\n\n    if (like) {\n      setLike(false);\n      locNews = true;\n    } else {\n      setLike(true);\n      locNews = false;\n    }\n  };\n\n  const getDate = publishedDate => {\n    let d = new Date(publishedDate);\n    return d.getDate() + \"-\" + d.getMonth() + \"-\" + d.getFullYear();\n  };\n\n  return (\n    <div key={newsId} className=\"news-article\">\n      <div className=\"news-img\">\n        <img src={`https://gumlet.assettype.com/` + image} alt={fileName} className=\"image\" />\n      </div>\n      <div className=\"news-description\">\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <div className=\"news-title\">{headline}</div>\n        </a>\n        <div className=\"news-meta\">\n          <div>By {authorName}</div>\n          <div>{getDate(date)}</div>\n        </div>\n        <button\n          className={`like ${locNews ? (like ? \"\" : \"liked\") : (likedNews >= 0 && !locNews) ? \"\" : \"liked\"} `}\n          onClick={onLike}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default NewsCard;","import React from \"react\";\nimport \"../App.css\";\n\nconst SearchBar = ({ onSearch }) => {\n  return (\n    <div className=\"searchbar\">\n      <span>Search News</span>\n      <input\n        type=\"text\"\n        placeholder=\"Search News\"\n        label=\"Search News\"\n        onChange={onSearch}\n      />\n    </div>\n  );\n};\n\nexport default SearchBar;","import React from \"react\";\nimport \"../App.css\";\n\nconst ResultCount = ({resultLength, totalNews}) => {\n    return(\n        <div className=\"results-count\">\n        {resultLength > 0\n          ? `Showing ${resultLength} of ${totalNews} results`\n          : \"No Results Found\" }\n      </div>\n    )\n}\n\nexport default ResultCount;","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport NewsCard from \"./components/NewsCard\";\nimport SearchBar from \"./components/SearchBar\";\nimport ResultCount from \"./components/ResultCount\"\n\nconst api =\n  \"https://nl-static-site-assets.s3.ap-south-1.amazonaws.com/reports.json\";\n\nconst Newsapp = () => {\n  const [news, setNews] = useState([]);\n  const [search, setSearch] = useState([]);\n  const [reload, setReload] = useState(true);\n  const localyStoredNews = window.localStorage.getItem('liked-news') \n  const getLikedNews = localyStoredNews === null ? [] : localyStoredNews;\n  \n  useEffect(() => {    \n    axios\n      .get(api)\n      .then(response => setNews(response.data.items))\n      .catch(error => console.log(error));\n  }, []);\n\n  const onchange = e => {\n    setSearch(e.target.value.toLowerCase());\n  };\n\n  const searchedNews = news.filter(newsItem => {\n    return newsItem.story.headline.toLowerCase().indexOf(search) !== -1;\n  });\n\n  return (\n    <div className=\"app\">\n      <SearchBar onSearch={onchange}/>\n      <ResultCount resultLength={searchedNews.length} totalNews={news.length} />\n      <main>\n        {searchedNews.map((newsItem, index) => {\n          const {\n            id,\n            headline,\n            \"author-name\": authorName,\n            \"hero-image-s3-key\": image,\n            \"hero-image-metadata\": { \"file-name\": fileName },\n            \"published-at\": date,\n            url\n          } = newsItem.story;\n\n          const localNews = getLikedNews.indexOf(id)\n\n          return (\n            <NewsCard\n              key={index}\n              newsId={id}\n              headline={headline}\n              authorName={authorName}\n              url={url}\n              fileName={fileName}\n              image={image}\n              date={date}\n              locNews={localNews !== -1 ? false : true }\n              firstRender={reload}\n              setRender={setReload}\n            />\n          );\n        })}\n      </main>\n    </div>\n  );\n};\n\nexport default Newsapp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}